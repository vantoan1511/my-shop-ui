@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

// Font Weights
$font-weights: (
        thin: 100,
        light: 300,
        regular: 400,
        medium: 500,
        bold: 700,
        black: 900
);

@mixin roboto-font($weight, $style: normal) {
  font-family: "Roboto", sans-serif;
  font-weight: map-get($font-weights, $weight);
  font-style: $style;
}

// Colors
$colors: (
        red: (
                1: #fffcfb,
                2: #fff8f6,
                3: #ffeae6,
                4: #ffdbd4,
                5: #ffcbc0,
                6: #ffbaae,
                7: #fca597,
                8: #f48979,
                9: #f63e2e,
                10: #e82a1d,
                11: #da180c,
                12: #631f18,
                contrast: #fff,
                surface: #fff6f4cc,
                indicator: #f63e2e,
                track: #f63e2e
        ),
        gray: (
                1: #fcfcfd,
                2: #f8f9fc,
                3: #eef0f4,
                4: #e6e8ed,
                5: #dee1e8,
                6: #d5dae1,
                7: #cacfd8,
                8: #b5bcc8,
                9: #888e9a,
                10: #7e848e,
                11: #60656e,
                12: #1d2026,
                contrast: #ffffff,
                surface: #ffffffcc,
                indicator: #888e9a,
                track: #888e9a
        ),
        primary: (
                brand: #f63e2e,
                light: #ff6533
        ),
        other: (
                light-gray: #eeeeee,
                gray: #686d76,
                black: #282828,
                light-black: #45474b,
                white: #fafafa
        )
);

// Root and Theme Variables
:root,
.light,
.light-theme {
  @each $color, $values in $colors {
    @each $key, $value in $values {
      --#{$color}-#{$key}: #{$value};
    }
  }

  --color-background: #fff;
}

// Font Classes
@each $weight, $style in (normal, italic) {
  @each $name, $value in $font-weights {
    .roboto-#{$name}#{"-" + $style} {
      @include roboto-font($name, $style);
    }
  }
}

// Scrollbar Styles
::-webkit-scrollbar {
  width: 12px;
  height: 12px;
}

::-webkit-scrollbar-track {
  background: var(--other-white);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background: var(--other-gray);
  border-radius: 10px;
  border: 2px solid var(--other-light-gray);
}

::-webkit-scrollbar-thumb:hover {
  background: var(--other-light-black);
}

// Global Resets and Basic Styles
*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

body {
  min-height: 100vh;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  font-family: "Roboto", sans-serif;
  background-color: var(--color-background);
}

img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

input,
button,
textarea,
select {
  font: inherit;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

#root,
#__next {
  isolation: isolate;
}

ul[role="list"],
ol[role="list"] {
  list-style: none;
}

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin-block-end: 0;
}

h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

a {
  text-decoration: none;
}

textarea:not([rows]) {
  min-height: 10em;
}

:target {
  scroll-margin-block: 5ex;
}

textarea:focus,
input[type="text"]:focus,
input[type="password"]:focus,
input[type="datetime"]:focus,
input[type="datetime-local"]:focus,
input[type="date"]:focus,
input[type="month"]:focus,
input[type="time"]:focus,
input[type="week"]:focus,
input[type="number"]:focus,
input[type="email"]:focus,
input[type="url"]:focus,
input[type="search"]:focus,
input[type="tel"]:focus,
input[type="color"]:focus {
  border-color: rgba(0, 0, 0, 0.8);
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.075) inset, 0 0 0 rgba(0, 0, 0, 0.6);
  outline: 0 none;
}
